Выбор резистора для матрицы.

Выбран резистор МЛТ-0,25. 
При напряжении 5в и мощности 0,25вт, ток составит 50мА, сопротивление 100 ом.

Эксперимент:
- на кусок провода был припаян резистор 100 ом 0,25вт и подключен к блоку питания. Выставлено напряжение 4в, ток 40ма.
  Однако, провода были очень близко припаяны к резистору - 1мм от корпуса резистора. 
  Возможно, тепло отводилось через них в провод, но не более 25% общей мощности.
- нагрев был заметным, небольшим. 
- резистор начинает перегреваться при токе 100ма и выше. А 0,25вт дает температуру менее 40 градусов. 
- нагрев при токе 40 ма был заметным, но на разных поверхностях кожи - разной интенсивности ощущения.
- колючие выводы усиливали ощущение нагрева, если не заменяли его. Надо избегать острых частей в готовой матрице.
- резистор довольно инерционный, около 1 секунды.
- кожа сильно поглощает тепло, поэтому в свободном состоянии резистор нагревается до 40 градусов, а при контакте с кожей остывает до комфортных значений.
- этот эксперимент не может выявить разрашающую способность участка кожи.
  - возможно, на разных участках кожи разная разрешающая способность.
  - возможно, две точки не окажутся независимыми в оценке их температуры. 
    по этой причине алгоритм вывода изображения на матрицу окажется более сложным, чем предполагается.

Соображения:
- очевидно, зависимость между температурой резистора и интенсивностью ощущения температуры нелинейная.
  И на разных участках тела - разная.
- ожидается, что есть некий базовый уровень нагрева, который не замечается, 
  И который зависит от общего состояния организма и окружающей среды.
  - И этот базовый уровень должен будет корректироваться соответственно. По ощущениям пользователя.
- И есть максимальный уровень, который не должен быть превышен, во избежание ожогов кожи.
- И есть некоторая градация по силе ощущения нагрева, но вряд ли удастся выделить 16 и более различимых дискретных ступеней в этом диапазоне.


Выводы:
1. Надо готовить эксперимент 2: узоры и бегущие огни на линейной шкале.
- это позволит определить: 
-- разрешающую способность участков кожи.
-- минимальный уровень мощности нагрева - базовый уровень.
-- являются ли точки нагрева взаимозависимыми.
-- максимальный уровень нагрева, которого безусловно достаточно в предполагаемых условиях и который безопасен.
-- влияние окружающей среды и состояния организма на восприятие информации.
-- инерционность теплоэлементов и инерционность чувствительности кожи.
2. реализация:
- матрица резисторов МЛТ 0,25: 8 шт по 100 ом с шагом 10мм.
-- дополнительно: матрица резисторов МЛТ 0,25: 8 шт по 100 ом с шагом 5мм.
-- дополнительно: матрица резисторов МЛТ 0,25: 8 шт по 100 ом с шагом 15мм.
-- дополнительно: матрица резисторов смд 1802 на плоской плате / гибкой плате.
- микроконтроллер тина2313 на тестовой плате с зашитыми узорами бегущих огней.
-- лучше бы уровни и узоры задавать с компьютера, но надо разрабатывать прошивку с уарт, а у меня что-то времени на это маловато.
   Хотя этот способ намного лучше, но намного дольше.
- источник питания: 5в 0,1А для микроконтроллера и 6в 0,5А для выходных блоков ключей.
-- по цепи 6в будет много пульсаций, там нужен и конденсатор и дроссель. 
-- Лучше сделать эти 2 ветви независимыми и LC-фильтры в обоих ветвях.
-- хорошо бы поставить по стабилизатору на каждую ветвь: 78L05 и 7806 (7805+диод в минусовом выводе)
- 2 выходных блока ключей: 1 на светодиоды. 1 на резисторы матрицы.
-- ключи: кт315х, резистор 1ком в цепи базы. 8 каналов на каждый блок.
-- ключи светодиодов: + резистор 200ом 0,125вт и светодиод
- шлейфы на 8 проводов плоские - около метра. 

Программный ШИМ:
- таймер на 1мгц?
- unsigned char pwm_levels[8]; //установка значений ШИМ для выходных каналов PORT_B
- unsigned char pwm_counters[8];//счетчики для программного ШИМ
- unsigned char counter; //основнояй счетчик размера цикла, сейчас 256 ступеней ШИМ.
- unsigned char pwm_enabled; //флаг что ШИМ должен выдаваться или нет
- unsigned char portb;//копия для вывода в порт всех 8 бит сразу
- прерывание таймера
{
//выключение ШИМ
if(pwm_enabled == 0) return;
//перезагрузка значений счетчиков в начале каждого цикла
counter--;
if(counter == 0)
{
counter = 255;
pwm_counters[0] = pwm_levels[0];
pwm_counters[1] = pwm_levels[1];
pwm_counters[2] = pwm_levels[2];
pwm_counters[3] = pwm_levels[3];
pwm_counters[4] = pwm_levels[4];
pwm_counters[5] = pwm_levels[5];
pwm_counters[6] = pwm_levels[6];
pwm_counters[7] = pwm_levels[7];
}
//исполнение ШИМ
pwm_counters[0]--;portb.0 = (pwm_counters[0] > 0);
pwm_counters[1]--;portb.1 = (pwm_counters[1] > 0);
pwm_counters[2]--;portb.2 = (pwm_counters[2] > 0);
pwm_counters[3]--;portb.3 = (pwm_counters[3] > 0);
pwm_counters[4]--;portb.4 = (pwm_counters[4] > 0);
pwm_counters[5]--;portb.5 = (pwm_counters[5] > 0);
pwm_counters[6]--;portb.6 = (pwm_counters[6] > 0);
pwm_counters[7]--;portb.7 = (pwm_counters[7] > 0);
//вывод в порт
PORTB = portb;

return;
}

- вот это все надо переписать на ассемблере, чтобы оно вмещалось по времени в период таймера.
  Это займет примерно 150 тактов максимум.
- Поскольку тактовая частота примерно 8мгц, то таймер можно запустить  на частоте 31250кгц (8m/256,  256 тактов), 
  а если повезет - то на 62500гц (8m/128, 128 тактов)
- частота ШИМ при 256 ступенях составит: 31250/256=122гц, для опытов этого хватит.
  А вообще - хорошо бы понизить ШИМ этак до 16-32 ступеней: и частота возрастет, и разницы не заметно будет все равно. 
